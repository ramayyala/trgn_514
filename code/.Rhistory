size = 6, angle = 45))
reads %>%
mutate(Names=fct_reorder(Names, Reads, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Reads, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Reads per Sample by Groups", x= "Samples", y="Reads") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 6, angle = 45,hjust = 1))
reads %>%
mutate(Names=fct_reorder(Names, Reads, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Reads, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Reads per Sample by Groups", x= "Samples", y="Reads") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
reads <- read.csv('linecount.csv')
names(reads)[1] <- "Samples"
names(reads)[3] <- "Reads"
reads <- reads[-c("line.count")]
reads <- as.data.frame(reads)
reads <- subset(reads, select = -c(line.count))
reads <- read.csv('linecount.csv')
names(reads)[1] <- "Samples"
View(reads)
reads <- subset(reads, select = -c(line.count))
reads <- as.data.frame(reads)
reads[1:2]
reads <- read.csv('linecount.csv')
names(reads)[1] <- "Samples"
reads <- subset(reads, select = -c(line.count))
reads <- as.data.frame(reads)
reads[1:2] %>% flextable() %>%
theme_vanilla() %>% autofit()
summaryfun <- function(x)list(N=length(x),Mean=mean(x),Median=median(x),SD=sd(x),Min=min(x),Max=max(x))
summaryfun(reads$Reads) %>% as.data.frame() %>% flextable() %>%
theme_vanilla() %>% autofit()
#flextable() %>% theme_vanilla() %>% autofit()
groups <- data.frame(c(rep("Septic Shock",4),rep("Severe Sepsis",4),rep("SIRS",4),rep("Uncomplicated Sepsis",4)))
colnames(groups) <- c('Groups')
reads['Groups'] <- groups$Groups
names <- data.frame(c("Sept_Shock_1","Sept_Shock_2","Sept_Shock_3","Sept_Shock_4","Sev_Sepsis_1","Sev_Sepsis_2","Sev_Sepsis_3","Sev_Sepsis_4","SIRS_1","SIRS_2","SIRS_3","SIRS_4","US_1","US_2","US_3","US_4"))
colnames(names) <- c('Names')
reads['Names'] <- names$Names
reads %>%
mutate(Names=fct_reorder(Names, Reads, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Reads, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Reads per Sample by Groups", x= "Samples", y="Reads") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
summaryfun(reads$Aligned_Reads) %>% as.data.frame() %>% flextable() %>%
theme_vanilla() %>% autofit()
summaryfun(reads$Aligned_Reads) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Aligned Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
summaryfun(reads$Percent_Alignment) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Aligned Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
summaryfun(reads$Percent_Alignment) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Percent Aligned Descriptive Stats") %>%
theme_vanilla() %>% autofit()
reads %>%
mutate(Names=fct_reorder(Names, Percent_Alignment, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Percent_Alignment, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Percent Aligned Reads per Sample by Groups", x= "Samples", y="% Aligned") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
knitr::opts_chunk$set(echo = FALSE)
library(data.table)
library(tidyverse)
library(ggfortify)
library(factoextra)
library(ggdendro)
library(dendextend)
library(gplots)
library(flextable)
library(ggstatsplot)
library(splitstackshape)
reads <- read.csv('linecount.csv')
names(reads)[1] <- "Samples"
reads <- subset(reads, select = -c(line.count))
reads <- as.data.frame(reads)
groups <- data.frame(c(rep("Septic Shock",4),rep("Severe Sepsis",4),rep("SIRS",4),rep("Uncomplicated Sepsis",4)))
colnames(groups) <- c('Groups')
reads['Groups'] <- groups$Groups
names <- data.frame(c("Sept_Shock_1","Sept_Shock_2","Sept_Shock_3","Sept_Shock_4","Sev_Sepsis_1","Sev_Sepsis_2","Sev_Sepsis_3","Sev_Sepsis_4","SIRS_1","SIRS_2","SIRS_3","SIRS_4","US_1","US_2","US_3","US_4"))
colnames(names) <- c('Names')
reads['Names'] <- names$Names
reads[,c("Names","Reads")] %>% flextable() %>% set_caption(caption = "Preliminary Reads of each sample", style= "Table Caption") %>%
theme_vanilla() %>% autofit()
summaryfun <- function(x)list(N=length(x),Mean=mean(x),Median=median(x),SD=sd(x),Min=min(x),Max=max(x))
summaryfun(reads$Reads) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Preliminary Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
reads %>%
mutate(Names=fct_reorder(Names, Reads, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Reads, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Reads per Sample by Groups", x= "Samples", y="Reads") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
summaryfun(reads$Aligned_Reads) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Aligned Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
summaryfun(reads$Percent_Alignment) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Percent Aligned Descriptive Stats") %>%
theme_vanilla() %>% autofit()
reads %>%
mutate(Names=fct_reorder(Names, Percent_Alignment, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Percent_Alignment, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Percent Aligned Reads per Sample by Groups", x= "Samples", y="% Aligned") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
# remove 0s from df if all of row is 0
df <-df[rowSums(df[1:16])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
colnames(df) <- names$Names
#Stack df
stacked_df <- stack(df)
# Add groups category to the stacked df
groups <- data.frame(c(rep("Septic Shock",147580),rep("Severe Sepsis",147580),rep("SIRS",147580),rep("Uncomplicated Sepsis",147580)))
colnames(groups) <- c('Groups')
stacked_df['Groups'] <- groups$Groups
# Boxplot across all Samples
ggplot(stacked_df, aes(x = ind, y = values,fill=Groups)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="Normalized FPKM") +
scale_fill_brewer(palette="Spectral") +
theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
ylim(-5,5)
ggplot(stacked_df, aes(x = ind, y = values,fill=Groups)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="Normalized FPKM") +
scale_fill_brewer(palette="Spectral") +
theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
ylim(-5,5)
#PCA
t_df <- t(df)
groups <- data.frame(c("Septic Shock","Septic Shock","Septic Shock","Septic Shock","Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of FPKM values of All Samples")
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of FPKM values of All Samples")
#Load Data
different <- read.table('CuffDiff_stats/different.csv', header=TRUE, sep=",")
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only SIRS and SEV_SEP FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
#df<-as.data.frame(df[ , grepl( paste(c("sirs","sev_sep"),collapse="|") , names( df ) ) ])
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
#Limit FPKM list to genes selected in different dataframe
df <- as.data.frame(setDT(df)[gene_id %chin% different$gene_id])
# remove 0s from df if all of row is 0
df <- df[rowSums(df[,1:8])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
colnames(df) <- names$Names
#PCA
t_df <- t(df)
groups <- data.frame(c("Septic Shock","Septic Shock","Septic Shock","Septic Shock","Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Filtered FPKM values of All Samples")
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Filtered FPKM values of All Samples")
dist.eucl <- dist(t_df, method="euclidean")
dist.cor <- get_dist(t_df,method="pearson")
hclust.complete.eucl <- hclust(d=dist.eucl, method = "complete")
dend <- hclust.complete.eucl %>% as.dendrogram %>%
set("branches_k_color",value = c("red", "blue"), k = 2) %>% set("branches_lwd", 1) %>%
set("labels_col", value = c("red", "blue"), k=2) %>% set("labels_cex", 0.5) %>%
set("leaves_pch", 20) %>% set("leaves_cex", 1) %>% set("leaves_col", value = c("red", "blue"), k=2)
# plot the dend in usual "base" plotting engine:
#plot(dend)
ggd1 <- as.ggdend(dend)
ggplot(ggd1,horiz = TRUE,theme = theme_minimal()) +
labs(title = "Dendrogram of All Samples", x= "Samples", y="Height")
ggplot(ggd1,horiz = TRUE,theme = theme_minimal()) +
labs(title = "Dendrogram of All Samples", x= "Samples", y="Height")
heatmap.2(as.matrix(df),labRow = FALSE,srtCol=40,xlab="Samples",ylab="Genes",
main = "Samples vs Filtered Genes")
heatmap.2(as.matrix(df),labRow = FALSE,srtCol=40,xlab="Samples",ylab="Genes",
main = "Samples vs Filtered Genes") + scale_x_discrete(guide=guide_axis(n.dodge=3))
heatmap.2(as.matrix(df),labRow = FALSE,srtCol=40,ylab="Genes",
main = "Samples vs Filtered Genes")
#Load Data
different <- read.table('CuffDiff_stats/different.csv', header=TRUE, sep=",")
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only SIRS and SEV_SEP FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
df<-as.data.frame(df[ , grepl( paste(c("sirs","sev_sep"),collapse="|") , names( df ) ) ])
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
#Limit FPKM list to genes selected in different dataframe
df <- as.data.frame(setDT(df)[gene_id %chin% different$gene_id])
# remove 0s from df if all of row is 0
df <- df[rowSums(df[,1:8])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
names<-names$Names[5:12]
colnames(df) <- names
#PCA
t_df <- t(df)
groups <- data.frame(c("Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Filtered FPKM values of SIRS VS SEPSIS")
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Filtered FPKM values of SIRS VS SEPSIS")
dist.eucl <- dist(t_df, method="euclidean")
dist.cor <- get_dist(t_df,method="pearson")
hclust.complete.eucl <- hclust(d=dist.eucl, method = "complete")
dend <- hclust.complete.eucl %>% as.dendrogram %>%
set("branches_k_color",value = c("red", "blue"), k = 2) %>% set("branches_lwd", 1) %>%
set("labels_col", value = c("red", "blue"), k=2) %>% set("labels_cex", 0.5) %>%
set("leaves_pch", 20) %>% set("leaves_cex", 1) %>% set("leaves_col", value = c("red", "blue"), k=2)
# plot the dend in usual "base" plotting engine:
#plot(dend)
ggd1 <- as.ggdend(dend)
ggplot(ggd1,horiz = TRUE,theme = theme_minimal()) +
labs(title = "Dendrogram of Severe Sepsis vs SIRS ", x= "Samples", y="Height")
ggplot(ggd1,horiz = TRUE,theme = theme_minimal()) +
labs(title = "Dendrogram of Severe Sepsis vs SIRS ", x= "Samples", y="Height")
heatmap.2(as.matrix(df),labRow = FALSE,srtCol=30,ylab="Genes",
main = "SIRS & Severe Sepsis Samples VS Filtered Genes")
heatmap.2(as.matrix(df),labRow = FALSE,srtCol=30,ylab="Genes",
main = "SIRS/Severe Sepsis Samples VS Filtered Genes")
IPA <- read.csv('IPA_upregulated_platelets.csv')
names(IPA)[1] <- "Category"
IPA %>% flextable() %>% set_caption(caption = "IPA Upregulated Pathway", style= "Table Caption") %>%
theme_vanilla() %>% autofit()
#Load Data
different <- read.table('CuffDiff_stats/different.csv', header=TRUE, sep=",")
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
IPA<-cSplit(IPA,"Molecules",",")
Molecules<-t(IPA)[5:12,]
#Select only SIRS and SEV_SEP FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
df<-as.data.frame(df[ , grepl( paste(c("sirs","sev_sep"),collapse="|") , names( df ) ) ])
# Add gene id to the sorted dataframe
gene_id <- data$gene_short_name
df <- cbind(df,gene_id)
#Limit FPKM list to genes selected in different dataframe
df <- as.data.frame(setDT(df)[gene_id %chin% Molecules])
# remove 0s from df if all of row is 0
df <- df[rowSums(df[,1:8])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
colnames(df) <- names
#PCA
t_df <- t(df)
groups <- data.frame(c("Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Upregulated Platelet Aggregation Genes in SIRS VS SEPSIS")
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Upregulated Platelet Aggregation Genes in SIRS VS SEPSIS")
heatmap.2(as.matrix(df),srtCol=30,xlab="Samples",ylab="Genes",
main = "SIRS/Severe Sepsis Samples VS Upregulated Platelet Aggregation Genes")
heatmap.2(as.matrix(df),srtCol=30,xlab="Samples",ylab="Genes",
main = "SIRS/Severe Sepsis VS Upregulated Platelet Aggregation Genes")
heatmap.2(as.matrix(df),srtCol=30,xlab="Samples",ylab="Genes",
main = "SIRS/Severe Sepsis VS Upregulated Platelet Aggregation")
heatmap.2(as.matrix(df),srtCol=30,
main = "SIRS/Severe Sepsis VS Upregulated Platelet Aggregation")
heatmap.2(as.matrix(df),srtCol=30)
View(reads)
knitr::opts_chunk$set(echo = FALSE)
library(data.table)
library(tidyverse)
library(ggfortify)
library(factoextra)
library(ggdendro)
library(dendextend)
library(gplots)
library(flextable)
library(ggstatsplot)
library(splitstackshape)
reads <- read.csv('linecount.csv')
names(reads)[1] <- "Samples"
reads <- subset(reads, select = -c(line.count))
reads <- as.data.frame(reads)
groups <- data.frame(c(rep("Septic Shock",4),rep("Severe Sepsis",4),rep("SIRS",4),rep("Uncomplicated Sepsis",4)))
colnames(groups) <- c('Groups')
reads['Groups'] <- groups$Groups
names <- data.frame(c("Sept_Shock_1","Sept_Shock_2","Sept_Shock_3","Sept_Shock_4","Sev_Sepsis_1","Sev_Sepsis_2","Sev_Sepsis_3","Sev_Sepsis_4","SIRS_1","SIRS_2","SIRS_3","SIRS_4","US_1","US_2","US_3","US_4"))
colnames(names) <- c('Names')
reads['Names'] <- names$Names
reads[,c("Names","Reads")] %>% flextable() %>% set_caption(caption = "Preliminary Reads of each sample", style= "Table Caption") %>%
theme_vanilla() %>% autofit()
summaryfun <- function(x)list(N=length(x),Mean=mean(x),Median=median(x),SD=sd(x),Min=min(x),Max=max(x))
summaryfun(reads$Reads) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Preliminary Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
reads %>%
mutate(Names=fct_reorder(Names, Reads, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Reads, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Reads per Sample by Groups", x= "Samples", y="Reads") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
summaryfun(reads$Aligned_Reads) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Aligned Reads Descriptive Stats") %>%
theme_vanilla() %>% autofit()
summaryfun(reads$Percent_Alignment) %>% as.data.frame() %>% flextable() %>%
set_caption(caption = "Percent Aligned Descriptive Stats") %>%
theme_vanilla() %>% autofit()
reads %>%
mutate(Names=fct_reorder(Names, Percent_Alignment, na.rm=TRUE)) %>%
ggplot(aes(x=Names, y=Percent_Alignment, fill=Groups)) +
geom_bar(stat="identity")+
labs(title = "Percent Aligned Reads per Sample by Groups", x= "Samples", y="% Aligned") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_text(face = "bold",
size = 8, angle = 45,hjust = 1))
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
# remove 0s from df if all of row is 0
df <-df[rowSums(df[1:16])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
colnames(df) <- names$Names
#Stack df
stacked_df <- stack(df)
# Add groups category to the stacked df
groups <- data.frame(c(rep("Septic Shock",147580),rep("Severe Sepsis",147580),rep("SIRS",147580),rep("Uncomplicated Sepsis",147580)))
colnames(groups) <- c('Groups')
stacked_df['Groups'] <- groups$Groups
# Boxplot across all Samples
ggplot(stacked_df, aes(x = ind, y = values,fill=Groups)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="Normalized FPKM") +
scale_fill_brewer(palette="Spectral") +
theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
ylim(-5,5)
ggplot(stacked_df, aes(x = ind, y = values,fill=Groups)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="Normalized FPKM") +
scale_fill_brewer(palette="Spectral") +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggplot(stacked_df, aes(x = ind, y = values,fill=Groups)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="Normalized FPKM") +
scale_fill_brewer(palette="Spectral") +
theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
ylim(-5,8)
View(df)
#PCA
t_df <- t(df)
groups <- data.frame(c("Septic Shock","Septic Shock","Septic Shock","Septic Shock","Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of FPKM values of All Samples")
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
#Load Data
different <- read.table('CuffDiff_stats/different.csv', header=TRUE, sep=",")
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only SIRS and SEV_SEP FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
#df<-as.data.frame(df[ , grepl( paste(c("sirs","sev_sep"),collapse="|") , names( df ) ) ])
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
#Limit FPKM list to genes selected in different dataframe
df <- as.data.frame(setDT(df)[gene_id %chin% different$gene_id])
# remove 0s from df if all of row is 0
df <- df[rowSums(df[,1:8])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#rename colnames to simpler names
colnames(df) <- names$Names
#PCA
t_df <- t(df)
groups <- data.frame(c("Septic Shock","Septic Shock","Septic Shock","Septic Shock","Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis","SIRS","SIRS","SIRS","SIRS","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis","Uncomplicated Sepsis"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups',label=TRUE,label.size=3.5) + labs(title = "PCA Analysis of Filtered FPKM values of All Samples")
setwd('G:/My Drive/Academics/TRGN 514/RNA_seq_project')
library(data.table)
library(tidyverse)
library(ggfortify)
library(factoextra)
library(ggdendro)
library(dendextend)
library(heatmaply)
library(pheatmap)
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
# remove 0s from df if all of row is 0
df <-df[rowSums(df[1:16])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
View(df)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
#PCA
t_df <- t(df)
View(t_df)
groups <- data.frame(c("SIRS","SIRS","SIRS","SIRS","Severe Sepsis","Severe Sepsis","Severe Sepsis","Severe Sepsis"))
colnames(groups) <- c('Groups')
autoplot(prcomp(t_df), data=groups, colour='Groups')
setwd('G:/My Drive/Academics/TRGN 514/RNA_seq_project')
# Load Libraries
#install.packages("devtools")
#devtools::install_github("qenvio/dryhic")
#devtools::install_github("qenvio/dryhicdata")
#library("dryhic")
library(data.table)
library(tidyverse)
library(ggfortify)
library(factoextra)
library(ggdendro)
library(dendextend)
library(heatmaply)
library(pheatmap)
#CUFFDIFF NO STATS
#Load Data
data <- read.table('CuffDiff_no_stats/genes.fpkm_tracking', header=TRUE, sep="\t")
#Select only FPKM columns
df<-data[ , grepl( "FPKM" , names( data ) ) ]
# Add gene id to the sorted dataframe
gene_id <- data$gene_id
df <- cbind(df,gene_id)
# remove 0s from df if all of row is 0
df <-df[rowSums(df[1:16])>0,]
#set gene_id as index
rownames(df) <- df$gene_id
gene_id <- df$gene_id
df <- subset (df, select = -gene_id)
#pseudo count and log10 scale
df <- df+0.01
df <- log10(df)
# Boxplot across all Samples
ggplot(stack(df), aes(x = ind, y = values)) +
geom_boxplot() +
labs(title = "Normalized FPKM Across all Samples", x= "Samples", y="FPKM") +
scale_fill_brewer(palette="Dark2") +
theme(axis.text.x = element_text(angle = 90)) +
ylim(-5,5)
#PCA
t_df <- t(df)
View(sum)
View(t_df)
